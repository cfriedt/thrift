// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include <iostream>

#include "St060115.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/server/TSimpleServer.h>
#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TBufferTransports.h>

using namespace std;

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

using namespace  ::org::misb;

class St060115Handler : virtual public St060115If {
 public:
  St060115Handler() {
    // Your initialization goes here
  }

  void update(const UasDataLinkLocalSet& message) {
    cout << "received message: " << message << endl;
  }

};

int main(int argc, char **argv) {
    (void) argc;
    (void) argv;
  int port = 9090;
  shared_ptr<St060115Handler> handler(new St060115Handler());
  shared_ptr<TProcessor> processor(new St060115Processor(handler));
  shared_ptr<TServerTransport> serverTransport(new TServerSocket(port));
  shared_ptr<TTransportFactory> transportFactory(new TBufferedTransportFactory());
  shared_ptr<TProtocolFactory> protocolFactory(new TBinaryProtocolFactory());

  TSimpleServer server(processor, serverTransport, transportFactory, protocolFactory);
  server.serve();
  return 0;
}

